{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "VM",
            "metadata": {
                "description": "VM Name"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1v2"
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Administrator name"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Administrator pasword"
            }
        }
    },
    "variables": {
        "nicApiVersion": "2017-06-01",
        "vmApiVersion": "2017-03-30",
        "publicIpApiVersion": "2017-11-01",
        "vnetApiVersion": "2016-03-30",
        "nsgApiVersion": "2017-06-01",
        "vmExtensionApiVersion": "2015-06-15",
        "asgApiVersion": "2017-10-01",
        "vnetName": "vnet",
        "vNetAddressSpace": "10.0.0.0/16",
        "subnetName": "subnet01",
        "subnetAdressPrefix": "10.0.0.0/24",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
        "subnetId": "[concat(variables('vnetId'),'/subnets/',variables('subnetName'))]",
        "asgName": "webServers",
        "asgId": "[resourceId('Microsoft.Network/applicationSecurityGroups',variables('asgName'))]",
        "nsgName": "webNsg",
        "nsgId": "[resourceId('Microsoft.Network/networkSecutiryGroups',variables('nsgName'))]",
        "pipName": "webServerPip",
        "imageInfo": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.4",
            "version": "latest"
        },
        "vmStorageType": "Standard_LRS",
        "scriptUrl":""
    },
    "resources": [
        {
            "comments": "Application Security Group",
            "name": "[variables('asgName')]",
            "type": "Microsoft.Network/applicationSecurityGroups",
            "apiVersion": "[variables('asgApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "comments": "Network Security Group",
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('nsgApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('asgName')]"
            ],
            "properties": {
                "securityRules": [
                    {
                        "description": "Allow http traffic to web servers",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "direction": "Inbound",
                        "access": "Allow",
                        "priority": 100,
                        "protocol": "Tcp",
                        "destinationPortRange": "80",
                        "destinationApplicationSecurityGroups": [
                            {
                                "id": "[variables('asgId')]"
                            }
                        ]
                    },
                    {
                        "description": "Allow SSH traffic to web servers",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "direction": "Inbound",
                        "access": "Allow",
                        "priority": 200,
                        "protocol": "Tcp",
                        "destinationPortRange": "22",
                        "destinationApplicationSecurityGroups": [
                            {
                                "id": "[variables('asgId')]"
                            }
                        ]
                    }
                ]
            }
        },
        {
            "comments": "Virtual Network",
            "name": "[variables('vNetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "[variables('vnetApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nsgName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAdressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Public Ip Address",
            "name": "[variables('pipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('publicIpApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "Web Server Network Interface",
            "name": "[concat(parameters('vmName'),'-NIC')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[resourceGroup().location]",
            "apiVersion": "[variables('nicApiVersion')]",
            "dependsOn": [
                "[variables('vNetName')]",
                "[variables('pipName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Linux Web Server",
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[variables('vmApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(parameters('vmName'),'-NIC')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageInfo')]",
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmStorageType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),'-NIC'))]"
                        }
                    ]
                }
            }
        },
        {
            "comments": "Installs NGNIX",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/linuxconfig')]",
            "apiVersion": "[variables('vmExtensionApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[parameters('vmName')]"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[concat(parameters('_artifactsLocation'),'/scripts/dns_installer_secondary.sh', parameters('_artifactsLocationSasToken'))]",
                  "[concat(parameters('_artifactsLocation'),'/scripts/ipaddresses.txt', parameters('_artifactsLocationSasToken'))]"
                ],
                "commandToExecute": "sh dns_installer_secondary.sh"
              }
            }
          },
    ]
}